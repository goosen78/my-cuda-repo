export http_proxy=https://199.100.16.100:3128
export https_proxy=https://199.100.16.100:3128
export ftp_proxy=https://199.100.16.100:3128
export socks_proxy=https://199.100.16.100:3128
export no_proxy=".team8c.com,localhost"
export HTTP_PROXY=$http_proxy
export HTTPS_PROXY=$https_proxy
export FTP_PROXY=$ftp_proxy
export SOCKS_PROXY=$socks_proxy
export NO_PROXY=$no_proxy

echo >> ~/.wgetrc <<EOF
http_proxy = 199.100.16.100:3128
https_proxy = 199.100.16.100:3128
ftp_proxy = 199.100.16.100:3128
no_proxy = team8c.com,localhost, localhost
EOF

echo >> ~/.curlrc <<EOF
http_proxy = 199.100.16.100:3128
https_proxy = 199.100.16.100:3128
ftp_proxy = 199.100.16.100:3128
no_proxy = team8c.com,localhost, localhost
EOF


host github.com
    port 22
    user git
    ProxyCommand connect-proxy -S your.ssh-proxy.url:port %h %p




nmcli device status


networkctl list
.

A few tools exists to aid to manipulate network connections managed by NetworkManager:

nmcli - a command-line tool
nmtui - a text user interface that provides a pseudo graphical menu in the terminal
nm-connection-editor - a graphical user interface
The method below uses the command line tool nmcli to modify network connection.

Identify the existing connection name:



nmcli connection show
Sample output:

NAME                UUID                                  TYPE            DEVICE
Wired connection 1  00000000-0000-0000-0000-000000000000  802-3-etherneten01
If a connection does not exist, create it with the nmcli connection add command.




Modify the connection to use a static IP address. Replace the variables in brackets with the appropriate values. Replace [CONNECTION_NAME] with the NAME from the command above.

sudo nmcli connection modify "clearlinux" \
ipv4.method "manual" \
ipv4.addresses "96.73.48.2/24" \
ipv4.gateway "96.73.48.1" \
ipv4.dns "96.73.48.1"





See the nmcli developer page for more configuration options. For advanced configurations, the /etc/NetworkManager/system-connections/*.nmconnection. can be edited directly.

Restart the NetworkManager server to reload the DNS servers:






sudo systemctl restart NetworkManager





Verify your static IP address details have been set:

nmcli








Using systemd-networkd
Network connections managed by systemd-networkd are stored as files with the .network file extension the /etc/systemd/network/ directory.

Files to manipulate network connections managed by systemd-networkd must be created manually.

Create the /etc/systemd/network directory if it does not already exist:

sudo mkdir -p /etc/systemd/network


Create a .network file and add the following content. Replace the variables in brackets with the appropriate values. Replace [INTERFACE_NAME] with LINK from the output of the networkctl list command that was run previously.

sudo nano /etc/systemd/network/70-static.network

[Match]
Name=clearlinux

[Network]
Address=96.73.48.2/24
Gateway=96.73.48.1
DNS=96.73.48.1
DNS=96.73.48.1

Restart the systemd-networkd service:

sudo systemctl restart systemd-networkd
Verify your static IP address details have been set:

networkctl status
